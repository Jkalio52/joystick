var o=(t="",e={})=>{throw new Error(`[joystick${t?`.${t}`:""}] ${e.message||e.reason||e}`)};var m=t=>{try{return!!(t&&typeof t=="object"&&!Array.isArray(t))}catch(e){o("types.isObject",e)}};var a=(t={},e=[],n="id",c="")=>{try{if(t&&m(t)){let s=Object.keys(t);for(let i=0;i<s.length;i+=1){let r=s[i],y=t[r];if(r===n&&y!==c&&e.push(y),r==="children"){let l=t[r];for(let p=0;p<l?.length;p+=1){let d=l[p]||{};a(d,e,n)}}}}return e}catch(s){o("component.getChildIdsFromTree",s)}},f=a;var h=(t=[])=>{try{for(let e of t)e.element&&e.eventType&&e.eventListener&&(e.element.removeEventListener(e.eventType,e.eventListener),e.element._joystick_event_selectors_=e.element._joystick_event_selectors_?.filter(n=>n!==e.selector))}catch(e){o("component.events.removeListeners",e)}};var O=(t={})=>{try{let e=f(componentInTree,[],"id",t?.id),n=[t?.id,...e],c=window.joystick._internal.eventListeners.filter(r=>n?.includes(r.componentId));h(c);let s=c.map(({eventId:r})=>r),i=window.joystick._internal.eventListeners.filter(({eventId:r})=>!s.includes(r));window.joystick._internal.eventListeners=i}catch(e){o("component.events.detachFromDOM",e)}};export{O as default};
